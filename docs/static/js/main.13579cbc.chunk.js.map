{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACG,0BAAMC,SAVU,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,MAAE,CAACP,MACrBC,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,QAkBfG,YAAY,gBCtBfC,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,yCACZ,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPFK,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXN,EAFW,iDAEmCO,UAAUF,GAF7C,+DAGAG,MAAMR,GAHN,cAGXS,EAHW,gBAIEA,EAAKC,OAJP,uBAIVC,EAJU,EAIVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACvB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVzB,kBAcVY,GAdU,4CAAD,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZtB,mBAAS,CAC/B4B,KAAK,GACLO,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAyBtC,OAjBAC,qBAAU,WAENjB,EAAQC,GACHiB,MAAK,SAAAR,GAGFM,EAAS,CACLT,KAAKG,EACLI,SAAQ,SAMtB,CAACb,IAGIc,EDvBoBI,CAAalB,GAA7BU,EAFwB,EAE7BJ,KAAYO,EAFiB,EAEjBA,QAGlB,OACI,oCACA,wBAAIjB,UAAU,qCAAqCI,GACtDa,GAAS,uBAAGjB,UAAU,oCAAb,WAAyDI,GAE/D,yBAAKJ,UAAU,aAGHc,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAU,IAAKV,EAAIhB,IACLgB,UEhBfW,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,gBADhB,mBACvB2C,EADuB,KACX5C,EADW,KAG9B,OACI,oCACI,yBAAKgB,GAAG,SACJ,4CACA,6BACA,kBAAC,EAAD,CAAahB,cAAeA,KAEhC,6BAEA,6BACI,0BAAMgB,GAAG,cACL,6BAAK,wBAAIA,GAAG,UAAP,6BAEL,4BAEA4B,EAAWb,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACImB,IAAKnB,EACLA,SAAUA,Y,MCjBtCsB,IAASC,OAAQ,kBAAC,EAAD,MAEbC,SAASC,eAAe,U","file":"static/js/main.13579cbc.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setinputValue] = useState('')\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setcategories(cats=>[inputValue]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n       <form onSubmit={handleSubmit}>\r\n       \r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Buscar...\"\r\n            /> \r\n        </form>\r\n      \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n   // console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs=async(category)=>{\r\n        \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=aLxa6DuC0VoAA24qr6vxiUDNIplQnsIF`;\r\n    const resp=await fetch(url);\r\n    const {data}=await resp.json();\r\n\r\n    const gifs=data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const {data:images,loading}=useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"animate__animated animate__bounce\">{category}</h2>\r\n    {loading&&<p className=\"animate__animated animate__flash\">Loading {category}</p>}\r\n       \r\n        <div className=\"card-grid\">\r\n        \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                    ))\r\n                }\r\n\r\n     \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(img=>{\r\n               \r\n            //console.log(img);\r\n                setstate({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n\r\n                \r\n            })\r\n\r\n    },[category])\r\n\r\n\r\n    return state;\r\n   \r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setcategories] = useState(['Dragon Ball'])\r\n\r\n    return (\r\n        <>\r\n            <div id=\"idDiv\">\r\n                <h1>GifExpertApp</h1>\r\n                <hr/>\r\n                <AddCategory setcategories={setcategories}/>\r\n            </div>\r\n            <br/>\r\n            \r\n            <div>\r\n                <form id=\"idDivFormu\">\r\n                    <div><h1 id=\"titulo\">Listado de imagenes gifs</h1></div>\r\n                    \r\n                    <ol>\r\n                    {\r\n                    categories.map(category=>(\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n\r\n                    ))\r\n                    }\r\n                    </ol>\r\n                </form>\r\n            </div>\r\n         \r\n                \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render( <GifExpertApp/> ,\n\n    document.getElementById('root')\n);"],"sourceRoot":""}